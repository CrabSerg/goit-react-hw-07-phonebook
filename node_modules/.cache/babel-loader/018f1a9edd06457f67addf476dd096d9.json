{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Serg007\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\GitHub\\\\goit-react-hw-07-phonebook\\\\src\\\\components\\\\ContactForm\\\\ContactForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/operation';\nimport { selectContacts } from 'redux/selectors';\nimport toast from 'react-hot-toast';\nimport { Box } from '../Box';\nimport { ContactLabel, ContactInput, AddBtn } from './ContactForm.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactForm = () => {\n  _s();\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const addedName = form.elements.name.value;\n    const addedNumber = form.elements.number.value;\n\n    if (contacts.find(contact => contact.name === addedName)) {\n      toast.error(`${addedName} is already in contacts`, {\n        duration: 3000,\n        position: 'top-center'\n      });\n    } else {\n      dispatch(addContact({\n        name: addedName,\n        phone: addedNumber\n      }));\n    }\n\n    form.reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    onSubmit: handleSubmit,\n    as: \"form\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\",\n    m: \"0 auto 20px\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      m: \"0 auto 10px\",\n      children: [/*#__PURE__*/_jsxDEV(ContactLabel, {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactInput, {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      m: \"0 auto 20px\",\n      children: [/*#__PURE__*/_jsxDEV(ContactLabel, {\n        htmlFor: \"number\",\n        children: \"Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactInput, {\n        type: \"tel\",\n        name: \"number\",\n        id: \"number\",\n        pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n        title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddBtn, {\n      type: \"submit\",\n      children: \"Add contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactForm, \"k1PFgZY3xE9F3u4VjgAv2j4HxqE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["C:/Users/Serg007/OneDrive/Документы/GitHub/goit-react-hw-07-phonebook/src/components/ContactForm/ContactForm.jsx"],"names":["useSelector","useDispatch","addContact","selectContacts","toast","Box","ContactLabel","ContactInput","AddBtn","ContactForm","contacts","dispatch","handleSubmit","event","preventDefault","form","target","addedName","elements","name","value","addedNumber","number","find","contact","error","duration","position","phone","reset"],"mappings":"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","sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/operation';\nimport { selectContacts } from 'redux/selectors';\nimport toast from 'react-hot-toast';\nimport { Box } from '../Box';\nimport { ContactLabel, ContactInput, AddBtn } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const addedName = form.elements.name.value;\n    const addedNumber = form.elements.number.value;\n\n    if (contacts.find(contact => contact.name === addedName)) {\n      toast.error(`${addedName} is already in contacts`, {\n        duration: 3000,\n        position: 'top-center',\n      });\n    } else {\n      dispatch(addContact({ name: addedName, phone: addedNumber }));\n    }\n\n    form.reset();\n  };\n\n  return (\n    <Box\n      onSubmit={handleSubmit}\n      as=\"form\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      width=\"100%\"\n      m=\"0 auto 20px\"\n    >\n      <Box display=\"flex\" flexDirection=\"column\" m=\"0 auto 10px\">\n        <ContactLabel htmlFor=\"name\">Name</ContactLabel>\n        <ContactInput\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"column\" m=\"0 auto 20px\">\n        <ContactLabel htmlFor=\"number\">Number</ContactLabel>\n        <ContactInput\n          type=\"tel\"\n          name=\"number\"\n          id=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Box>\n      <AddBtn type=\"submit\">Add contact</AddBtn>\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}